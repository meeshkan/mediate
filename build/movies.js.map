{"version":3,"sources":["../src/movies.js"],"names":["getMovieReviewHandler","_","res","next","movies","movieReviewApi","getReivews","send","err","console","error","stack","getOneMovie","req","movie","queryMovies","params","query","MovieReviewRoute","router","use","bodyParser","json","get"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,qBAAqB,GAAG,OAAOC,CAAP,EAAUC,GAAV,EAAeC,IAAf,KAAwB;AACpD,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMC,cAAc,CAACC,UAAf,EAArB;AACA,WAAOJ,GAAG,CAACK,IAAJ,CAAS;AAAEH,MAAAA;AAAF,KAAT,CAAP;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwCF,GAAG,CAACG,KAA5C;AACA,WAAOR,IAAI,CAACK,GAAD,CAAX;AACD;AACF,CARD;;AAUA,MAAMI,WAAW,GAAG,OAAOC,GAAP,EAAYX,GAAZ,EAAiBC,IAAjB,KAA0B;AAC5C,MAAI;AACF,UAAMW,KAAK,GAAG,MAAMT,cAAc,CAACU,WAAf,CAA2BF,GAAG,CAACG,MAAJ,CAAWC,KAAtC,CAApB;AACA,WAAOf,GAAG,CAACK,IAAJ,CAAS;AAAEO,MAAAA;AAAF,KAAT,CAAP;AACD,GAHD,CAGE,OAAON,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwCF,GAAG,CAACG,KAA5C;AACA,WAAOR,IAAI,CAACK,GAAD,CAAX;AACD;AACF,CARD;;AAUA,SAASU,gBAAT,GAA4B;AAC1B,QAAMC,MAAM,GAAG,sBAAf;AACAA,EAAAA,MAAM,CAACC,GAAP,CAAWC,oBAAWC,IAAX,EAAX;AAEAH,EAAAA,MAAM,CAACI,GAAP,CAAW,UAAX,EAAuBvB,qBAAvB;AACAmB,EAAAA,MAAM,CAACI,GAAP,CAAW,SAAX,EAAsBX,WAAtB;AAEA,SAAOO,MAAP;AACD;;eAEcD,gB","sourcesContent":["import { Router } from 'express';\nimport * as movieReviewApi from './moviesApi';\nimport bodyParser from 'body-parser'\n\nconst getMovieReviewHandler = async (_, res, next) => {\n  try {\n    const movies = await movieReviewApi.getReivews();\n    return res.send({ movies });\n  } catch (err) {\n    console.error('Failed fetching movies', err.stack);\n    return next(err);\n  }\n};\n\nconst getOneMovie = async (req, res, next) => {\n  try {\n    const movie = await movieReviewApi.queryMovies(req.params.query)\n    return res.send({ movie })\n  } catch (err) {\n    console.error(\"Failed fetching movies\", err.stack);\n    return next(err);\n  }\n}\n\nfunction MovieReviewRoute() {\n  const router = Router();\n  router.use(bodyParser.json())\n\n  router.get('/reviews', getMovieReviewHandler);\n  router.get('/:query', getOneMovie)\n\n  return router;\n}\n\nexport default MovieReviewRoute;\n"],"file":"movies.js"}